continue
new_arr
continue
action.action_list_id
action_list_id
LogAction.where("user_id =?", 2)
User.all
action.user_id
action
log_actions
continue
new_arr
continue
new_arr
continue
new_arr
continue
new_arr
continue
new_arr
new_Arr
continue
new_arr
continue
new_arr
continue
new_arr
continue
new_arr
continue
created_at
log_action.created_at
continue
created_at
log_action.created_at
continue
log_action.created_at
created_at
continue
created_at
log_action.created_at
continue
log_action.created_at
created_at
continue
created_at
continue
new_arr
continue
new_arr
continue
new_arr
continue
new_arr
continue
new_arr
continue
new_arr
continue
@probabilities
continue
@probabilities
continue
y
continue
y
continue
@probabilities
continue
@probabilities
continue
@probabilities
continue
new_arr
continue
new_arr
continue
new_arr
continue
new_arr
continue
new_arr
continue
y
y[i]
z[i]
continue
z[1]
z[i]
i
continue
new_arr
continue
new_arr
continue
new_arr
continue
new_arr
continue
new_arr
continue
new_arr
z
continue
sum_of_actions
action_output
new_arr
continue
new_arr
continue
new_arr
z
continue
sum_of_actions
y
x
z
x
z
action_output
z
continue
action_output.each {|x| x.each_with_index {|y,i| puts "#{y}--#{i}"}}
action_output.each {|x| x.each_with_index {|y,i| puts y}}
action_output.each do |x|
action_output
sum_of_actions
action_output
y[1]
y
z
continue
action_output
continue
analyse_action
continue
analyse_action
continue
analyse_action
continue
analyse_action
continue
analyse_action
continue
analyse_action
continue
analyse_action
continue
analyse_action
continue
analyse_action
continue
analyse_action
continue
analyse_action.immediate
analyse_action
continue
ac.immediate
ac=AnalyseAction.first
@ac.immediate
@ac
@ac = AnalyseAction.where("action_name1 = ? AND action_name2 = ?", new_action.name, ActionList.find(log_action.action_list_id).name)
analyse_action.immediate
analyse_action.lifetime
analyse_action
continue
analyse_action
continue
analyse_action
continue
analyse_action
continue
analyse_action
continue
log_action
analyse_action
continue
difference
continue
difference
continue
difference
continue
action.action_list_id
log_actions
difference
continue
difference
continue
difference
continue
@time_diff
difference
continue
TimeDifference.between(created_at_new_action, created_at_old_actions).in_days
continue
TimeDifference.between(created_at_new_action, created_at_old_actions).in_days
TimeDifference.between(created_at_new_action, created_at_old_actions).ind_days
continue
log_actions
continue
LogAction.where("user_id = ? AND action_list_id != ?", action.user_id, action.action_list_id)
LogAction.where("user_id = ? AND action_list_id != ?, action.user_id, action.action_list_id)
LogAction.where("user_id = ?", action.user_id)
LogAction.where(:user_id => action.user_id)
LogAction.where(:user_id => action.user_id && :action_list_id != action.action_list_id)
LogAction.where(:user_id => action.user_id)
LogAction.where(:user_id => :action.user_id)
LogAction.where(:user_id => :action.user_id && :action_list_id != :action.action_list_id)
LogAction.where(:user_id => action.user_id && :action_list_id != action.action_list_id)
action.action_list_id
action
log_actions
log_action
continue
@action
continue
a.each {|x| puts "#{x.action_name1}--#{x.action_name2}"}
a=AnalyseAction.all
continue
a.each {|x| puts "#{x.action_name1}--#{x.action_name2}"}
a=AnalyseAction.all
continue
a.each {|x| puts "#{x.action_name1}--#{x.action_name2}"}
a.each {|x| puts "#{x.action_name1}--#{action_name2}"}
a.each {|x| puts x.action_name1}
a.each {|x| puts x.actiona_name1}
a.each {|x| puts x}
a.each {|x| puts "#{x.action_name1} --#{action_name2}"} 
a
a=AnalyseAction.all
AnalyseAction.all
continue
AnalyseAction.last
continue
AnalyseAction.all
AnalyseAction.find(1)
AnalyseAction.last
AnalyseAction.first
ActionAnalyse.first
@action.analyse
continue
action_name
continue
@analyse_action.respod_to?(add_analyse)
continue
@analyse_action.respod_to?(add_analyse)
@analyse_action
continue
@action
continue
@action
continue
LogAction.first
@action
@action.user_id
